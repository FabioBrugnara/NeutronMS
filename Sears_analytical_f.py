import numpy as np
from scipy.integrate import quad
import pandas as pd

mu_s = 1

def delta_slab_S(d, theta):
    integrand = lambda t: (1-np.exp(-t))/t
    E = lambda x: -np.euler_gamma + quad(integrand, 1e-8, x)[0]
    u = lambda x: (np.exp(x)-np.exp(-x))/(2*x)

    eta = lambda d: mu_s*d/2
    alpha =lambda d, theta: eta(d) * 1/np.cos(theta)
    alpha0 = lambda d: eta(d)

    s1 = lambda d, theta: np.exp( -np.abs(alpha(d,theta)) - np.abs(alpha0(d))) * u(alpha(d,theta)-alpha0(d))
    s2 = lambda d, theta: np.exp( -np.abs(alpha(d,theta)) - np.abs(alpha0(d))) * mu_s*d/(8*alpha(d,theta)*alpha0(d)*(alpha(d,theta)-alpha0(d))) \
                        * ( - (np.exp(alpha(d,theta)+alpha0(d)) + np.exp(-alpha(d,theta)-alpha0(d)) - np.exp(alpha(d,theta)-alpha0(d)) \
                        - np.exp(-alpha(d,theta)+alpha0(d)) ) * (alpha(d,theta)-alpha0(d)) * np.log(2*eta(d)) \
                        
                        + ( np.exp(alpha(d,theta)+alpha0(d)) + np.exp(-alpha(d,theta)-alpha0(d)) ) * (alpha(d,theta)-alpha0(d)) * E(2*eta(d)) \
                        + np.exp(alpha(d,theta)-alpha0(d))  * ( alpha0(d)*E(2*eta(d)+2*alpha(d,theta)) - alpha(d, theta)*E(2*eta(d)-2*alpha0(d)) ) \
                        + np.exp(-alpha(d,theta)+alpha0(d)) * ( alpha0(d)*E(2*eta(d)-2*alpha(d,theta)) - alpha(d, theta)*E(2*eta(d)+2*alpha0(d)) ) )

    return s2(d, theta) / s1(d, theta)

def delta_slab(d, theta):
    return np.vectorize(delta_slab_S)(d, theta)



cylinder =  [
            ["0"   , "0.20"  , "0.30"  , "0.40"  , "0.50"  , "0.60"  , "0.70"  , "0.80"  , "0.90"  , "1.00"  , "1.10"  ],
            ["0.20", "0.1417", "0.1694", "0.1875", "0.2001", "0.2094", "0.2164", "0.2218", "0.2260", "0.2295", "0.2322"],
            ["0.30", "0.1626", "0.2009", "0.2267", "0.2450", "0.2585", "0.2689", "0.2769", "0.2832", "0.2882", "0.2923"],
            ["0.40", "0.1748", "0.2212", "0.2535", "0.2769", "0.2944", "0.3078", "0.3183", "0.3266", "0.3332", "0.3386"],
            ["0.50", "0.1825", "0.2348", "0.2725", "0.3003", "0.3214", "0.3376", "0.3504", "0.3605", "0.3687", "0.3754"],
            ["0.60", "0.1875", "0.2443", "0.2863", "0.3178", "0.3420", "0.3608", "0.3757", "0.3876", "0.3972", "0.4051"],
            ["0.70", "0.1909", "0.2510", "0.2964", "0.3311", "0.3580", "0.3792", "0.3960", "0.4095", "0.4204", "0.4294"],
            ["0.80", "0.1934", "0.2559", "0.3040", "0.3413", "0.3705", "0.3937", "0.4123", "0.4272", "0.4394", "0.4495"],
            ["0.90", "0.1951", "0.2596", "0.3098", "0.3492", "0.3804", "0.4054", "0.4255", "0.4418", "0.4551", "0.4661"],
            ["1.00", "0.1964", "0.2623", "0.3142", "0.3554", "0.3883", "0.4148", "0.4362", "0.4537", "0.4681", "0.4800"],
            ["1.10", "0.1974", "0.2644", "0.3176", "0.3602", "0.3945", "0.4223", "0.4450", "0.4636", "0.4789", "0.4917"]
            ]
cylinder = np.array(cylinder, dtype=float)
d, r, delta = [], [], []
for i in range(1,cylinder.shape[0]):
    for j in range(1,cylinder.shape[1]):
        r.append(cylinder[0,j])
        d.append(cylinder[i,0])
        delta.append(cylinder[i,j])

cylinder = pd.DataFrame({'r':r, 'd':d, 'delta':delta})

small_cylinder =    [
                    ["0", "0.01", "0.02", "0.03", "0.04", "0.05", "0.06", "0.07", "0.08", "0.09", "0.10"],
                    ["0.01", "0.0079", "0.0111", "0.0131", "0.0144", "0.0155", "0.0163", "0.0170", "0.0175", "0.0182", "0.0186"],
                    ["0.02", "0.0101", "0.0157", "0.0194", "0.0221", "0.0241", "0.0258", "0.0272", "0.0284", "0.0295", "0.0304"],
                    ["0.03", "0.0110", "0.0183", "0.0235", "0.0273", "0.0303", "0.0328", "0.0349", "0.0367", "0.0382", "0.0396"],
                    ["0.04", "0.0115", "0.0200", "0.0262", "0.0311", "0.0350", "0.0382", "0.0409", "0.0433", "0.0454", "0.0472"],
                    ["0.05", "0.0118", "0.0210", "0.0282", "0.0340", "0.0386", "0.0425", "0.0459", "0.0488", "0.0513", "0.0536"],
                    ["0.06", "0.0120", "0.0218", "0.0297", "0.0362", "0.0415", "0.0461", "0.0500", "0.0534", "0.0564", "0.0591"],
                    ["0.07", "0.0122", "0.0224", "0.0308", "0.0379", "0.0439", "0.0490", "0.0535", "0.0573", "0.0608", "0.0639"],
                    ["0.08", "0.0123", "0.0228", "0.0317", "0.0393", "0.0458", "0.0515", "0.0564", "0.0607", "0.0646", "0.0681"],
                    ["0.09", "0.0124", "0.0232", "0.0324", "0.0405", "0.0474", "0.0535", "0.0589", "0.0637", "0.0679", "0.0718"],
                    ["0.10", "0.0125", "0.0234", "0.0330", "0.0414", "0.0488", "0.0553", "0.0611", "0.0662", "0.0708", "0.0750"]
                 ]
small_cylinder = np.array(small_cylinder, dtype=float)
d, r, delta = [], [], []
for i in range(1,small_cylinder.shape[0]):
    for j in range(1,small_cylinder.shape[1]):
        r.append(small_cylinder[0,j])
        d.append(small_cylinder[i,0])
        delta.append(small_cylinder[i,j])

small_cylinder = pd.DataFrame({'r':r, 'd':d, 'delta':delta})

rod =   [
        ["0", "0.01", "0.02", "0.03", "0.04", "0.05", "0.06", "0.07", "0.08", "0.09", "0.10"],
        ["0.20", "0.0128", "0.0246", "0.0357", "0.0459", "0.0554", "0.0643", "0.0725", "0.0802", "0.0873", "0.0940"],
        ["0.30", "0.0129", "0.0250", "0.0365", "0.0474", "0.0577", "0.0675", "0.0768", "0.0856", "0.0939", "0.1019"],
        ["0.40", "0.0129", "0.0252", "0.0369", "0.0481", "0.0588", "0.0690", "0.0788", "0.0882", "0.0972", "0.1058"],
        ["0.50", "0.0129", "0.0253", "0.0371", "0.0485", "0.0594", "0.0699", "0.0800", "0.0897", "0.0991", "0.1081"],
        ["0.60", "0.0130", "0.0253", "0.0372", "0.0487", "0.0597", "0.0704", "0.0807", "0.0906", "0.1002", "0.1095"],
        ["0.70", "0.0130", "0.0254", "0.0373", "0.0488", "0.0600", "0.0707", "0.0811", "0.0912", "0.1010", "0.1105"],
        ["0.80", "0.0130", "0.0254", "0.0374", "0.0490", "0.0601", "0.0710", "0.0815", "0.0916", "0.1015", "0.1111"],
        ["0.90", "0.0130", "0.0254", "0.0374", "0.0490", "0.0603", "0.0711", "0.0817", "0.0919", "0.1019", "0.1116"],
        ["1.00", "0.0130", "0.0254", "0.0375", "0.0491", "0.0603", "0.0713", "0.0819", "0.0922", "0.1022", "0.1119"],
        ["1.10", "0.0130", "0.0255", "0.0375", "0.0491", "0.0604", "0.0714", "0.0820", "0.0923", "0.1024", "0.1122"]
        ]
rod = np.array(rod, dtype=float)
d, r, delta = [], [], []
for i in range(1,rod.shape[0]):
    for j in range(1,rod.shape[1]):
        r.append(rod[0,j])
        d.append(rod[i,0])
        delta.append(rod[i,j])

rod = pd.DataFrame({'r':r, 'd':d, 'delta':delta})

disc =  [
        [0, 0.20, 0.30, 0.40, 0.50, 0.60, 0.70, 0.80, 0.90, 1.00, 1.10],
        [0.01, 0.0216, 0.0231, 0.0240, 0.0247, 0.0251, 0.0255, 0.0258, 0.0260, 0.0261, 0.0263],
        [0.02, 0.0362, 0.0392, 0.0411, 0.0424, 0.0433, 0.0441, 0.0446, 0.0450, 0.0454, 0.0457],
        [0.03, 0.0483, 0.0528, 0.0556, 0.0576, 0.0590, 0.0601, 0.0609, 0.0615, 0.0620, 0.0625],
        [0.04, 0.0587, 0.0647, 0.0685, 0.0711, 0.0730, 0.0744, 0.0755, 0.0763, 0.0770, 0.0776],
        [0.05, 0.0679, 0.0754, 0.0801, 0.0834, 0.0857, 0.0875, 0.0889, 0.0899, 0.0908, 0.0915],
        [0.06, 0.0762, 0.0851, 0.0908, 0.0947, 0.0975, 0.0996, 0.1013, 0.1025, 0.1036, 0.1044],
        [0.07, 0.0836, 0.0941, 0.1006, 0.1052, 0.1085, 0.1109, 0.1129, 0.1144, 0.1156, 0.1165],
        [0.08, 0.0905, 0.1023, 0.1098, 0.1150, 0.1187, 0.1216, 0.1238, 0.1255, 0.1269, 0.1280],
        [0.09, 0.0967, 0.1100, 0.1184, 0.1242, 0.1284, 0.1316, 0.1341, 0.1360, 0.1376, 0.1388],
        [0.10, 0.1024, 0.1171, 0.1265, 0.1329, 0.1376, 0.1412, 0.1439, 0.1460, 0.1477, 0.1491]
        ]
disc = np.array(disc, dtype=float)
d, r, delta = [], [], []
for i in range(1,disc.shape[0]):
    for j in range(1,disc.shape[1]):
        r.append(disc[0,j])
        d.append(disc[i,0])
        delta.append(disc[i,j])

disc = pd.DataFrame({'r':r, 'd':d, 'delta':delta})


cylinder = pd.concat([small_cylinder, disc, rod, cylinder], axis=0)
